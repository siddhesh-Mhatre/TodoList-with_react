{"version":3,"sources":["components/book.png","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setisEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","className","src","book","alt","type","value","onChange","e","target","placeholder","title","onClick","class","newEditItem","find","editItem","updateditems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,MAA0B,iC,OC6H1BA,EA3HF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,WACd,GAAKR,EAEE,GAAIA,IAAcI,EACvBD,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAKC,KAAOL,EACP,2BAAKI,GAAZ,IAAkBE,KAAMZ,IAEnBU,MAIXL,GAAgB,GAChBJ,EAAa,IACbM,EAAc,UACT,CACL,IAAMM,EAAe,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMZ,GAGRG,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBZ,EAAa,SArBbgB,MAAM,mBA6CV,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,4EAEF,sBAAKH,UAAU,WAAf,UACE,uBACEI,KAAK,OACLV,KAAK,GACLW,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAAawB,EAAEC,OAAOH,QACvCI,YAAY,4BAEbvB,EACC,mBACEc,UAAU,qBACVU,MAAM,WACNC,QAASrB,IAGX,mBACEU,UAAU,sBACVU,MAAM,cACNC,QAASrB,OAIf,qBAAKU,UAAU,YAAf,SACGhB,EAAMO,KAAI,SAACC,GACV,OACE,sBAAKQ,UAAU,WAAf,UACE,6BAAKR,EAAKE,OAEV,sBAAKM,UAAU,WAAf,UACE,mBACEY,MAAM,sBACNF,MAAM,YACNC,QAAS,kBAjDZ,SAAClB,GAChB,IAAIoB,EAAc7B,EAAM8B,MAAK,SAACtB,GAC5B,OAAOA,EAAKC,KAAOA,KAGrBN,GAAgB,GAChBJ,EAAa8B,EAAYnB,MACzBL,EAAcI,GA0CmBsB,CAASvB,EAAKC,OAG/B,mBACEO,UAAU,2BACVU,MAAM,cACNC,QAAS,kBAlEV,SAAClB,GAClB,IAAMuB,EAAehC,EAAMiC,QAAO,SAACzB,GACjC,OAAOA,EAAKC,KAAOA,KAErBR,EAAS+B,GA8DwBE,CAAW1B,EAAKC,YAbND,EAAKC,SAqB1C,qBAAKO,UAAU,YAAf,SACE,yBACEA,UAAU,eACV,oBAAkB,aAClBW,QAvEM,WAChB1B,EAAS,KAmED,UAKG,IACD,2DC1GCkC,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACD,cAAC,EAAD,OCOYoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.02574a3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/book.1b3868f7.png\";","import React, { useState } from \"react\";\r\nimport book from '../components/book.png'\r\nconst Todo = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [toggleSubmit, setToggleSubmit] = useState(true);\r\n  const [isEditItem, setisEditItem] = useState(null);\r\n\r\n  const addItem = () => {\r\n    if (!inputData) {\r\n      alert(\"plzz fill data\");\r\n    } else if (inputData && !toggleSubmit) {   //for edit\r\n      setItems(\r\n        items.map((elem) => {\r\n          if (elem.id === isEditItem) {\r\n            return { ...elem, name: inputData };\r\n          }\r\n          return elem;\r\n        })\r\n        \r\n      );\r\n      setToggleSubmit(true);\r\n      setInputData(\"\");\r\n      setisEditItem(null);\r\n    } else {\r\n      const allInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputData,\r\n      };\r\n\r\n      setItems([...items, allInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    const updateditems = items.filter((elem) => {\r\n      return elem.id !== id;\r\n    });\r\n    setItems(updateditems);\r\n  };\r\n\r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  const editItem = (id) => {\r\n    let newEditItem = items.find((elem) => {\r\n      return elem.id === id;\r\n    });\r\n    // console.log(newEditItem);\r\n    setToggleSubmit(false);\r\n    setInputData(newEditItem.name);\r\n    setisEditItem(id);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src={book} alt=\"todologo\" />\r\n            <figcaption>Add your list here 📑</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              value={inputData}\r\n              onChange={(e) => setInputData(e.target.value)}\r\n              placeholder=\" ✍️ Add items\"\r\n            />\r\n            {toggleSubmit ? (\r\n              <i\r\n                className=\"fa fa-plus add-btn\"\r\n                title=\"add item\"\r\n                onClick={addItem}\r\n              ></i>\r\n            ) : (\r\n              <i\r\n                className=\"fas fa-edit add-btn\"\r\n                title=\"Update item\"\r\n                onClick={addItem}\r\n              ></i>\r\n            )}\r\n          </div>\r\n          <div className=\"showItems\">\r\n            {items.map((elem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={elem.id}>\r\n                  <h3>{elem.name}</h3>\r\n\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      class=\"fas fa-edit add-btn\"\r\n                      title=\"Edit item\"\r\n                      onClick={() => editItem(elem.id)}\r\n                    ></i>\r\n\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      title=\"Delete item\"\r\n                      onClick={() => deleteItem(elem.id)}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}\r\n            >\r\n              {\" \"}\r\n              <span>CHECK List</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"," import './App.css';\nimport Todo from './components/todo';\nfunction App() {\n  return (\n    <div className=\"App\">\n   <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}